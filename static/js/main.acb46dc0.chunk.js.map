{"version":3,"sources":["Layout/Header.js","utils/api/index.js","Layout/Button.js","Layout/Home.js","Layout/CreateDeck.js","Layout/Decks.js","Layout/Card.js","Layout/Study.js","Layout/EditDeck.js","Layout/FormCard.js","Layout/CreateCard.js","Layout/EditCard.js","Layout/NotFound.js","Layout/index.js","App.js","index.js"],"names":["Header","className","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updatedDeck","id","deleteDeck","card","Number","updatedCard","cardId","append","Button","children","onClick","type","Home","useState","deckList","setDeckList","history","useHistory","useEffect","log","loadDecks","to","map","length","description","window","confirm","go","CreateDeck","formData","setFormData","handleChange","target","value","event","preventDefault","push","onSubmit","htmlFor","onChange","placeholder","required","rows","Deck","useParams","useRouteMatch","undefined","currentDeck","setCurrentDeck","currentCards","setCurrentCards","abortController","AbortController","deckToSet","loadCurrentDeck","abort","front","back","deleteCard","location","reload","Card","cardCount","setCardCount","sideOfCard","setSideOfCard","studyCardCount","setStudyCardCount","studyCard","setStudyCard","sortedCards","sort","a","b","handleFlip","current","Study","params","loadDeck","EditDeck","setName","setDescription","updateDeck","then","FormCard","handleSubmit","setFront","setBack","handleDone","CreateCard","createCard","currentCard","setCurrentCard","find","loadCard","updateCard","NotFound","Layout","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acb46dc0.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:8080\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\r\n\r\nexport const Button = ({ children, onClick, type }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\ttype={type ? { type } : 'button'}\r\n\t\t\tonClick={onClick}\r\n\t\t\tclassName=\"btn btn-primary mb-2 mr-2 mt-2\">\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t)\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { deleteDeck, listDecks } from \"../utils/api/index\";\r\nimport { Button } from \"./Button\";\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const [deckList, setDeckList] = useState([]);\r\n    const history = useHistory([]);\r\n\r\n    useEffect(() => {\r\n\t\tasync function loadDecks() {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await listDecks();\r\n\t\t\t\tsetDeckList(response);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t\tloadDecks();\r\n\t}, []);\r\n\r\n    if(deckList) {\r\n        return (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link to=\"/decks/new\">\r\n\t\t\t\t\t\t<Button>Create Deck</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t{deckList.map((deck) => (\r\n\t\t\t\t\t<div key={deck.id} className=\"card mb-3\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<h4 className=\"card-title\">{deck.name}</h4>\r\n\t\t\t\t\t\t\t<h6 className=\"card-subtitle mb-2 text-muted\">\r\n\t\t\t\t\t\t\t\t{deck.cards.length} cards\r\n\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t<p className=\"card-text\">{deck.description}</p>\r\n\t\t\t\t\t\t\t<Link to={`/decks/${deck.id}`}>\r\n\t\t\t\t\t\t\t\t<Button>View</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tif (window.confirm(\"Delete this deck?\")) {\r\n\t\t\t\t\t\t\t\t\t\tdeleteDeck(`${deck.id}`)\r\n\t\t\t\t\t\t\t\t\t\thistory.go(\"/\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t)\r\n    } else {\r\n        return <p> Loading...</p>\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { createDeck } from \"../utils/api/index\";\r\n\r\nexport default function CreateDeck() {\r\n\r\n\tconst initialFormData = {\r\n\t\tname: \"\",\r\n\t\tdescription: \"\",\r\n\t}\r\n\r\n\tconst [formData, setFormData] = useState(initialFormData);\r\n\tconst history = useHistory();\r\n\r\n\tconst handleChange = ({ target }) => {\r\n\t\tsetFormData({\r\n\t\t\t...formData,\r\n\t\t\t[target.name]: target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tconst { id } = await createDeck(formData);\r\n\t\thistory.push(`/decks/${id}`);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n\t\t\t\t\t\tCreate Deck\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\t\t\t</nav>\r\n\t\t\t<h2>Create New Deck</h2>\r\n\t\t\t<form onSubmit={handleSubmit} className=\"form-group\">\r\n\t\t\t\t<label className=\"col-form-label\" htmlFor=\"deckName\">\r\n\t\t\t\t\tName\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tid=\"deckName\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName=\"form-control mb-3\"\r\n\t\t\t\t\tvalue={formData.name}\r\n\t\t\t\t\tplaceholder=\"Name of Deck\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"deckDescription\">Description</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"deckDescription\"\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName=\"form-control mb-3\"\r\n\t\t\t\t\tvalue={formData.description}\r\n\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\tplaceholder=\"Description of deck contents\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={() => history.push(\"/\")}\r\n\t\t\t\t\tclassName=\"btn btn-primary mr-2\">\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { readDeck, deleteCard, deleteDeck } from \"../utils/api/index\";\n\nimport { Button } from \"./Button\";\n\nexport default function Deck() {\n\n\tconst { deckId } = useParams();\n\tconst history = useHistory();\n\tconst { url } = useRouteMatch();\n\tconst [currentDeck, setCurrentDeck] = useState(undefined);\n\tconst [currentCards, setCurrentCards] = useState(undefined);\n\n\tuseEffect(() => {\n\t\tconst abortController = new AbortController();\n\n\t\tasync function loadCurrentDeck() {\n\t\t\ttry {\n\t\t\t\tconst deckToSet = await readDeck(deckId, abortController.signal);\n\t\t\t\tsetCurrentDeck(deckToSet);\n\t\t\t\tconst { cards } = deckToSet;\n\t\t\t\tsetCurrentCards(cards);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"loadCurrentDeck Aborted\");\n\t\t\t}\n\t\t}\n\n\t\tloadCurrentDeck();\n\t\treturn () => abortController.abort();\n\t}, [deckId])\n\n\tif (currentDeck && currentCards) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<nav aria-label=\"breadcrumb\">\n\t\t\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t\t\t<li className=\"breadcrumb-item\">\n\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\n\t\t\t\t\t\t\tView Deck\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t</nav>\n\t\t\t\t<div>\n\t\t\t\t\t<h2> {currentDeck.name} </h2>\n\t\t\t\t\t<h4> {currentDeck.description} </h4>\n\t\t\t\t\t<Link to={`${url}/edit`}>\n\t\t\t\t\t\t<Button>Edit Deck</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to={`${url}/study`}>\n\t\t\t\t\t\t<Button>Study Deck</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to={`${url}/cards/new`}>\n\t\t\t\t\t\t<Button>Add Cards</Button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-danger\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (window.confirm(\"Delete this deck?\")) {\n\t\t\t\t\t\t\t\tdeleteDeck(currentDeck.id);\n\t\t\t\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{currentCards.map((card) => (\n\t\t\t\t\t\t<div key={card.id}>\n\t\t\t\t\t\t\t<div className=\"card border-primary mb-3\">\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t<h4 className=\"card-text text-danger\">Front</h4>\n\t\t\t\t\t\t\t\t\t<p className='card-text'>{card.front}</p>\n\t\t\t\t\t\t\t\t\t<h4 className=\"card-text text-danger\">Back</h4>\n\t\t\t\t\t\t\t\t\t<p className='card-text'>{card.back}</p>\n\t\t\t\t\t\t\t\t\t<Link to={`/decks/${currentDeck.id}/cards/${card.id}/edit`}>\n\t\t\t\t\t\t\t\t\t\t<Button>Edit Card</Button>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tif (window.confirm(\"Delete this card?\")) {\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteCard(`${card.id}`);\n\t\t\t\t\t\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push(`/decks/${deckId}`);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tDelete Card\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn <p>Loading...</p>\n\t}\n}","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function Card({ currentCards }) {\r\n\r\n\tconst history = useHistory();\r\n\tconst { deckId } = useParams();\r\n\r\n\tconst [cardCount, setCardCount] = useState(1);\r\n\tconst [sideOfCard, setSideOfCard] = useState(null);\r\n\tconst [studyCardCount, setStudyCardCount] = useState(0);\r\n\tconst [studyCard, setStudyCard] = useState(null);\r\n\tconst sortedCards = currentCards.sort((a, b) => a.id - b.id);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (currentCards.length > 2) {\r\n\t\t\tsetSideOfCard(true);\r\n\t\t}\r\n\t\tsetStudyCard(sortedCards[studyCardCount]);\r\n\t}, [currentCards, sortedCards, studyCardCount]);\r\n\r\n\tconst handleFlip = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tsetSideOfCard(!sideOfCard);\r\n\t}\r\n\r\n\tconst handleNext = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tsetSideOfCard(!sideOfCard);\r\n\t\tsetCardCount((current) => current + 1);\r\n\t\tsetStudyCardCount((current) => current + 1);\r\n\t\tsetStudyCard(sortedCards[studyCardCount + 1]);\r\n\r\n\t\tif (currentCards.length <= cardCount) {\r\n\t\t\tif (window.confirm(\"Restart Cards?\")) {\r\n\t\t\t\tsetCardCount(1);\r\n\t\t\t\tsetStudyCardCount(0);\r\n\t\t\t\tsetStudyCard(sortedCards[studyCardCount]);\r\n\t\t\t\thistory.push(`/decks/${deckId}/study`);\r\n\t\t\t} else {\r\n\t\t\t\thistory.push(\"/\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleAddCards = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\thistory.push(`/decks/${deckId}/cards/new`);\r\n\t}\r\n\r\n\tif (currentCards) {\r\n\r\n\t\tif (sideOfCard === true && studyCard) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"card border-primary mb-3\">\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<h4 className=\"card-title\">\r\n\t\t\t\t\t\t\tCard {cardCount} of {currentCards.length}\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<p className=\"card-text\"> {studyCard.front} </p>\r\n\t\t\t\t\t\t<button onClick={handleFlip} className=\"btn btn-primary\">\r\n\t\t\t\t\t\t\tFlip\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\tif (sideOfCard === false && studyCard) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"card border-primary mb-3\">\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<h4 className=\"card-title\">\r\n\t\t\t\t\t\t\tCard {cardCount} of {currentCards.length}\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<p className=\"card-text\"> {studyCard.back} </p>\r\n\t\t\t\t\t\t<button onClick={handleFlip} className=\"btn btn-primary mr-3\">\r\n\t\t\t\t\t\t\tFlip\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={handleNext} className=\"btn btn-primary mr-3\">\r\n\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"card border-primary\">\r\n\t\t\t\t\t<div className=\"card-body mb-3\">\r\n\t\t\t\t\t\t<h4 className=\"card-title\">Not enough cards.</h4>\r\n\t\t\t\t\t\t<p className=\"card-text mb-3\">\r\n\t\t\t\t\t\t\tYou need at least 3 cards to study. There are\r\n\t\t\t\t\t\t\t{currentCards.length} in this deck.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button onClick={handleAddCards} className=\"btn btn-primary\">\r\n\t\t\t\t\t\t+ Add Cards\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t} else {\r\n\t\treturn <p>Loading...</p>\r\n\t}\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api\";\r\nimport Card from \"./Card\";\r\n\r\nexport default function Study() {\r\n\r\n\tconst params = useParams();\r\n\tconst [currentDeck, setCurrentDeck] = useState(null);\r\n\tconst [currentCards, setCurrentCards] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function loadDeck() {\r\n\t\t\tsetCurrentDeck([]);\r\n\t\t\tsetCurrentCards([]);\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await readDeck(params.deckId);\r\n\t\t\t\tsetCurrentDeck(response);\r\n\t\t\t\tconst { cards } = response;\r\n\t\t\t\tsetCurrentCards(cards);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadDeck();\r\n\t}, [params]);\r\n\r\n\tif (currentDeck) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t\t\t<Link to={`/decks/${currentDeck.id}`}>{currentDeck.name}</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item active\">Study Deck</li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>{currentDeck.name}: Study</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Card currentCards={currentCards}></Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else {\r\n\t\treturn <p>Loading...</p>\r\n\t}\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { updateDeck, readDeck } from \"../utils/api\";\r\n\r\nexport default function EditDeck() {\r\n\r\n\tconst { deckId } = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst [currentDeck, setCurrentDeck] = useState(null);\r\n\tconst [name, setName] = useState(\"Loading...\");\r\n\tconst [description, setDescription] = useState(\"Loading...\");\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tasync function loadDeck() {\r\n\t\t\tsetCurrentDeck([]);\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await readDeck(deckId);\r\n\t\t\t\tsetCurrentDeck(response);\r\n\t\t\t\tsetName(response.name);\r\n\t\t\t\tsetDescription(response.description);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadDeck();\r\n\t}, [deckId]);\r\n\r\n\tconst handleEditSubmit = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tconst deck = {\r\n\t\t\t...currentDeck,\r\n\t\t\tname,\r\n\t\t\tdescription,\r\n\t\t}\r\n\r\n\t\tupdateDeck(deck).then((response) => {\r\n\r\n\t\t\tconsole.log(response);\r\n\t\t\tsetCurrentDeck(response);\r\n\t\t\thistory.push(`/decks/${currentDeck.id}`);\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleCancel = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\thistory.push(`/decks/${currentDeck.id}`);\r\n\t}\r\n\r\n\tif (currentDeck) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"breadcrumb-item active\">\r\n\t\t\t\t\t\t\t<Link to={`/decks/${deckId}`}>View Deck</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"breadcrumb-item active\" page-current=\"page\">\r\n\t\t\t\t\t\t\tEdit Deck\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<h2>Edit Deck</h2>\r\n\t\t\t\t<form onSubmit={handleEditSubmit}>\r\n\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={(event) => setName(event.target.value)}\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label>Description</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={(event) => setDescription(event.target.value)}\r\n\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={handleCancel}>Cancel</button>\r\n\t\t\t\t\t<button type=\"submit\">Submit</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else {\r\n\t\treturn <p>Loading...</p>\r\n\t}\r\n}","import React from \"react\";\r\n\r\nexport default function FormCard({\r\n\thandleSubmit,\r\n\tfront,\r\n\tsetFront,\r\n\tback,\r\n\tsetBack,\r\n\thandleDone,\r\n}) {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} className=\"form-group\">\r\n\t\t\t<label htmlFor=\"front\">Front</label>\r\n\t\t\t<textarea\r\n\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\trows=\"3\"\r\n\t\t\t\trequired\r\n\t\t\t\tvalue={front}\r\n\t\t\t\tonChange={(event) => setFront(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<label htmlFor=\"back\">Back</label>\r\n\t\t\t<textarea\r\n\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\trows=\"3\"\r\n\t\t\t\trequired\r\n\t\t\t\tvalue={back}\r\n\t\t\t\tonChange={(event) => setBack(event.target.value)}\r\n\t\t\t/>\r\n\t\t\t<button onClick={handleDone} className=\"btn btn-secondary mr-2\">\r\n\t\t\t\tDone\r\n\t\t\t</button>\r\n\t\t\t<button type=\"submit\" className=\"btn btn-primary mr-2\">\r\n\t\t\t\tSave\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { createCard, readDeck } from \"../utils/api\";\r\nimport FormCard from \"./FormCard\"\r\n\r\nexport default function CreateCard() {\r\n\r\n\tconst params = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst [front, setFront] = useState('Front side of card');\r\n\tconst [back, setBack] = useState('Back side of card');\r\n\tconst [currentDeck, setCurrentDeck] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst abortController = new AbortController();\r\n\t\tasync function loadDeck() {\r\n\t\t\tsetCurrentDeck([]);\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await readDeck(params.deckId);\r\n\t\t\t\tsetCurrentDeck(response);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tif (error.name === 'AbortError') {\r\n\t\t\t\t\tconsole.log('Aborted', params);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadDeck();\r\n\r\n\t\treturn () => abortController.abort();\r\n\t}, [params]);\r\n\r\n\tconst handleDone = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\thistory.push(`/decks/${params.deckId}`);\r\n\t}\r\n\r\n\tconst handleSubmit = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tconst card = {\r\n\t\t\tfront: front,\r\n\t\t\tback: back,\r\n\t\t\tdeckId: params.deckId,\r\n\t\t}\r\n\r\n\t\tcreateCard(params.deckId, card).then((response) => {\r\n\r\n\t\t\tconsole.log(response);\r\n\t\t\tsetFront(\"Front side of card\");\r\n\t\t\tsetBack(\"Back side of card\");\r\n\t\t})\r\n\t\thistory.push(`/decks/${currentDeck.id}`);\r\n\t}\r\n\r\n\tif (currentDeck) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t\t\t<Link to={`/decks/${currentDeck.id}`}>{currentDeck.name}</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n\t\t\t\t\t\t\t\tAdd Card\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2>{currentDeck.name}: Add Card</h2>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FormCard\r\n\t\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\t\tfront={front}\r\n\t\t\t\t\t\tback={back}\r\n\t\t\t\t\t\tsetFront={setFront}\r\n\t\t\t\t\t\tsetBack={setBack}\r\n\t\t\t\t\t\thandleDone={handleDone}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else {\r\n\t\treturn <p>Loading...</p>\r\n\t}\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { readDeck, updateCard } from \"../utils/api\";\r\n\r\nimport FormCard from \"./FormCard\";\r\n\r\nexport default function EditDeck() {\r\n\r\n\tconst history = useHistory();\r\n\tconst { deckId, cardId } = useParams();\r\n\r\n\tconst [front, setFront] = useState(\"Front side of card\");\r\n\tconst [back, setBack] = useState(\"Back side of card\");\r\n\tconst [currentDeck, setCurrentDeck] = useState(null);\r\n\tconst [currentCard, setCurrentCard] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tasync function loadCard() {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await readDeck(deckId);\r\n\t\t\t\tsetCurrentDeck(response);\r\n\t\t\t\tsetCurrentCard(response.cards.find((card) => card.id + '' === cardId));\r\n\t\t\t\tsetFront(response.cards.find((card) => card.id + '' === cardId).front);\r\n\t\t\t\tsetBack(response.cards.find((card) => card.id + '' === cardId).back);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadCard();\r\n\t}, [deckId, cardId]);\r\n\r\n\tconst handleCancel = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\thistory.push(`/decks/${deckId}`);\r\n\t}\r\n\r\n\tconst handleSubmit = (event) => {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tconst card = {\r\n\t\t\t...currentCard,\r\n\t\t\tfront,\r\n\t\t\tback,\r\n\t\t}\r\n\t\tupdateCard(card).then((response) => {\r\n\r\n\t\t\tsetCurrentCard(response);\r\n\t\t\thistory.push(`/decks/${deckId}`);\r\n\t\t})\r\n\t}\r\n\r\n\tif (currentDeck && currentCard) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<nav aria-label=\"breadcrumb\">\r\n\t\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">\r\n\t\t\t\t\t\t\t\t<Link to={`/decks/${deckId}`}>View Deck</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\" aria-current=\"page\">\r\n\t\t\t\t\t\t\t\tEdit Page\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2>Edit Card</h2>\r\n\t\t\t\t<FormCard\r\n\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\tfront={front}\r\n\t\t\t\t\tback={back}\r\n\t\t\t\t\tsetFront={setFront}\r\n\t\t\t\t\tsetBack={setBack}\r\n\t\t\t\t\thandleDone={handleCancel}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} else {\r\n\t\treturn <p>Loading...</p>\r\n\t}\r\n}","import React from \"react\";\n\nfunction NotFound() {\n\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport CreateDeck from \"./CreateDeck\";\nimport Decks from \"./Decks\";\nimport Study from \"./Study\";\nimport EditDeck from \"./EditDeck\";\nimport CreateCard from \"./CreateCard\";\nimport EditCard from \"./EditCard\";\nimport NotFound from \"./NotFound\";\n\n\n\nfunction Layout() {\n\n  return (\n    <div className=\"container\">\n      <Header />\n        <Switch>\n          <Route exact path =\"/\">            \n            <Home />\n          </Route>\n          <Route exact path =\"/decks/new\">\n            <CreateDeck />\n          </Route>\n          <Route exact path=\"/decks/:deckId\">\n\t\t\t\t\t  <Decks /> \n\t\t\t\t  </Route>\n          <Route exact path=\"/decks/:deckId/study\">\n            <Study />\n          </Route>\n          <Route exact path=\"/decks/:deckId/edit\">\n            <EditDeck />\n          </Route>\n          <Route exact path=\"/decks/:deckId/cards/new\">\n\t\t\t\t\t  <CreateCard /> \n\t\t\t\t  </Route>\n          <Route exact path=\"/decks/:deckId/cards/:cardId/edit\">\n\t\t\t\t\t  <EditCard /> \n\t\t\t\t  </Route>\n          <NotFound />\n        </Switch>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}